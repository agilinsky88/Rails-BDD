<!DOCTYPE html>
<!-- saved from url=(0045)https://www.learnacademy.org/current-days/743 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta content="IE=edge" http-equiv="X-UA-Compatible">
<title>
LEARN academy - BDD with Rails

</title>
<meta content="Using Rspec and Capybara with ChromeJavascript testing with Capybara allows us to add a js: true flag to individual s..." name="description">
<meta content="a Rails Web development bootcamp" property="og:title">
<meta content="LEARN" property="og:site_name">
<meta content="https://www.learnacademy.org" property="og:url">
<meta content="Using Rspec and Capybara with ChromeJavascript testing with Capybara allows us to add a js: true flag to individual s..." property="og:description">
<meta content="https://www.learnacademy.org/assets/square_logo-5ebc5276c481b9ab313a67f246723531555334ea0ba83289445a6cf5fa1794fc.png" property="og:image">
<link href="https://www.learnacademy.org/assets/icons/favicon-830e4e1b03e57cc0e5dc78538e65acd21196cc65bdb4886796a4bb0e798b415a.ico" rel="shortcut icon" type="image/x-icon">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-275ee4fd3dd0a0a76681772a2db63ad9b8f16bb52fd65d7a6d2ce538e3692879.png" rel="apple-touch-icon">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-57x57-275ee4fd3dd0a0a76681772a2db63ad9b8f16bb52fd65d7a6d2ce538e3692879.png" rel="apple-touch-icon" sizes="57x57">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-72x72-699a0179932b82d2bda9008c10b58c6312388876aa9fd9adbf9c89e864c4850d.png" rel="apple-touch-icon" sizes="72x72">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-76x76-4e732ce3d6e51515ba893c6f8d29417c2e4ab5b6acf45e69ed1ee802e4c892eb.png" rel="apple-touch-icon" sizes="76x76">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-114x114-af2860ebb9fdabc087a923d31bcf4ba9fb1cd1838d178f1ee38e8c233c6cd037.png" rel="apple-touch-icon" sizes="114x114">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-120x120-6cca762264d731728f7719bb788a3272d39a9910320cd6a6d984cd01b6b89e0d.png" rel="apple-touch-icon" sizes="120x120">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-144x144-caff090eb5befd0c5513eeaf92ea32003db735ef8177cb1bbdc408f71bf49e45.png" rel="apple-touch-icon" sizes="144x144">
<link href="https://www.learnacademy.org/assets/icons/apple-touch-icon-152x152-3087c5349d6701a80a52dd97ace12b9af75c01bc3c9140597611ff6b4d5868f6.png" rel="apple-touch-icon" sizes="152x152">
<meta content="width=device-width, initial-scale=1.0" name="viewport">
<link href="./RailsRSpecGuide_files/css" rel="stylesheet" type="text/css">
<link href="./RailsRSpecGuide_files/css(1)" rel="stylesheet" type="text/css">
<link href="./RailsRSpecGuide_files/css(2)" rel="stylesheet" type="text/css">
<link rel="stylesheet" media="all" href="./RailsRSpecGuide_files/academy-2a9adddbdba342fc6ca26a44a8cdf44659ec65877ccf2b6c2ed516053afb6e2d.css" data-turbolinks-track="true">
<script type="text/javascript" async="" id="inspsync" src="./RailsRSpecGuide_files/inspectlet.js"></script><script type="text/javascript" id="www-widgetapi-script" src="./RailsRSpecGuide_files/www-widgetapi.js" async=""></script><script src="./RailsRSpecGuide_files/iframe_api"></script><script type="text/javascript" async="" src="./RailsRSpecGuide_files/conversion_async.js"></script><script type="text/javascript" async="" src="./RailsRSpecGuide_files/analytics.js"></script><script src="./RailsRSpecGuide_files/458512557680214" async=""></script><script async="" src="./RailsRSpecGuide_files/fbevents.js"></script><script async="" src="./RailsRSpecGuide_files/gtm.js"></script><script src="./RailsRSpecGuide_files/academy-36b43eb2adb1a759206354ca9bc5e0e0d81cd4dcbe5be45a134ec4cbebdd17a1.js" data-turbolinks-track="true"></script>
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="CS8BAUwEirFKTCGz4NVpt99uNZ/KmM2YrerLGnPntQ7XV2X3pkQ6K2vhmD2o+HVnaNj3jSxNdob0Ojj5phydjw==">
<script src="./RailsRSpecGuide_files/saved_resource"></script></head>
<body>
<!-- Google Tag Manager -->
<script>
  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-ML53W7');
</script>
<noscript>
&lt;iframe height='0' src='//www.googletagmanager.com/ns.html?id=GTM-ML53W7' style='display:none;visibility:hidden' width='0'&gt;&lt;/iframe&gt;
</noscript>
<!-- End Google Tag Manager -->
<script id="inspectletjs" type="text/javascript">
window.__insp = window.__insp || [];
__insp.push(['wid', 1454822293]);
(function() {
function __ldinsp(){var insp = document.createElement('script'); insp.type = 'text/javascript'; insp.async = true; insp.id = "inspsync"; insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js'; var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(insp, x); }
if (window.attachEvent){
window.attachEvent('onload', __ldinsp);
}else{
window.addEventListener('load', __ldinsp, false);
}
})();
</script>
<!-- End Inspectlet Embed Code -->
<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
    n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
  n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
      document,'script','https://connect.facebook.net/en_US/fbevents.js');
  
  fbq('init', '458512557680214');
  fbq('track', "PageView");
</script>
<noscript>
&lt;img height='1' src='https://www.facebook.com/tr?id=458512557680214&amp;amp;ev=PageView&amp;amp;noscript=1' style='display:none' width='1'&gt;
</noscript>
<!-- End Facebook Pixel Code -->

<nav class="navbar navbar-fixed-top">
<div class="container-fluid">
<div class="row">
<div class="col-md-2">
<div class="navbar-header row">
<div class="col-xs-2">
<button aria-controls="navbar" aria-expanded="false" class="navbar-toggle collapsed" data-target="#navbar" data-toggle="collapse" type="button">
<span class="menu-global menu-top"></span>
<span class="menu-global menu-middle"></span>
<span class="menu-global menu-bottom"></span>
</button>
</div>
<div class="col-xs-8 col-md-2">
<a class="navbar-brand" href="https://www.learnacademy.org/">
<img srcset="/assets/logo-learn-academy-green@2x-00328236e4eb6e9238955c99ff224bbc265b36f6932fe7c05fed4288d35ff934.png" src="./RailsRSpecGuide_files/logo-learn-academy-green@1x-70527a9309ae3a8da51f30d252951399569692952a95e2c8bd72fd237b6d24a6.png" alt="Logo learn academy green@1x" width="168" height="71">
</a>
</div>
</div>
</div>
<div class="col-md-10">
<div class="navbar-social clearfix">
<div class="pull-right">
<a href="https://www.learnacademy.org/contact_us">Contact us</a>
<span>or call</span>
<a class="phone" href="tel:+01-619-940-7848">619-940-7848</a>

<div id="sign_in">
<span>|</span>
<a href="https://www.learnacademy.org/users/sign_in">Sign in</a>
</div>
</div>
</div>
<div class="navbar-collapse collapse" id="navbar">
<ul class="nav navbar-nav pull-right">
<li class="dropdown">
<a aria-expanded="true" aria-haspopup="true" class="dropdown-toggle" data-toggle="dropdown" href="https://www.learnacademy.org/current-days/743#" id="dropdownTopMenu">
CLASSES
<i class="glyphicon glyphicon-menu-down small-icon"></i>
</a>
<ul aria-labelledby="dropdownTopMenu" class="dropdown-menu">
<li class="dropdown-header">Fulltime Bootcamps</li>
<li><a href="https://www.learnacademy.org/ruby">Ruby</a></li>
<li><a href="https://www.learnacademy.org/javascript">Javascript</a></li>
<li class="divider"></li>
<li class="dropdown-header">Weekend Bootcamps</li>
<li><a href="https://www.learnacademy.org/jumpstart">Jumpstart</a></li>
<li class="show-header dropdown-header">Why Learn?</li>
<li class="show-internships"><a href="https://www.learnacademy.org/internships">Internships</a></li>
<li class="show-testimonials"><a href="https://www.learnacademy.org/testimonials">Testimonials</a></li>
<li class="show-location"><a href="https://www.learnacademy.org/location">Location</a></li>
<li class="show-community"><a href="https://www.learnacademy.org/community">Community</a></li>
<li class="divider"></li>
<li class="dropdown-header">Questions?</li>
<li><a href="https://www.learnacademy.org/apply">Apply Now</a></li>
<li><a href="https://www.learnacademy.org/schedule_a_tour">Schedule a Tour</a></li>
<li><a href="https://www.learnacademy.org/faqs">Read the FAQ</a></li>
<li><a href="https://www.learnacademy.org/current-curriculum">Curriculum</a></li>
<li><a href="https://www.learnacademy.org/contact_us">Contact Us</a></li>
</ul>
</li>
<li class="hide-internships"><a href="https://www.learnacademy.org/internships">INTERNSHIPS</a></li>
<li class="hide-testimonials"><a href="https://www.learnacademy.org/testimonials">TESTIMONIALS</a></li>
<li class="hide-location"><a href="https://www.learnacademy.org/location">LOCATION</a></li>
<li class="hide-community"><a href="https://www.learnacademy.org/community">COMMUNITY</a></li>
<li class="dropdown">
<a aria-expanded="true" aria-haspopup="true" class="dropdown-toggle" data-toggle="dropdown" href="https://www.learnacademy.org/current-days/743#" id="dropdownTopMenu">
ABOUT
<i class="glyphicon glyphicon-menu-down small-icon"></i>
</a>
<ul aria-labelby="dropdownTopMenu" class="dropdown-menu">
<li><a href="https://www.learnacademy.org/about">About Us</a></li>
<li><a href="https://www.learnacademy.org/staff">LEARN Staff</a></li>
<li><a href="https://www.learnacademy.org/blog">Latest News</a></li>
<li><a href="https://www.learnacademy.org/faqs">Read the FAQ</a></li>
<li><a href="https://www.learnacademy.org/location">See our Location</a></li>
<li><a href="https://www.learnacademy.org/contact_us">Contact Us</a></li>
</ul>
</li>
<li>
<a class="apply-cta last-cta" href="https://www.learnacademy.org/apply">APPLY NOW</a>
</li>
</ul>
</div>
</div>
</div>
</div>
</nav>

<div class="container academy">
<p class="notice"></p>
<p class="alert"></p>
<div class="container">
<div class="row">
<div class="col-md-2">
&nbsp;
</div>
<div class="col-md-8">
<h1 class="learn-class-title">
Learn Class: 2017 Echo 
</h1>
</div>
<div class="col-md-2">
<div class="btn-group pull-right">
<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" id="class-dropdown">
Class
<span class="caret"></span>
</button>
<ul aria-labelledby="class-dropdown" class="dropdown-menu learn-classes-dropdown">
<li>
<a href="https://www.learnacademy.org/current-curriculum">Current</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=12">2017 Echo </a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=11">2017 Delta </a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=10">2017 Charlie </a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=9">2017 Bravo</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=8">2017 Alpha</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=7">2016 Echo</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=6">2016 Delta</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=5">2016 Charlie</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=3">2016 Bravo</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=2">2016 Alfa</a>
</li>
<li>
<a href="https://www.learnacademy.org/curriculum?learn_class=1">Fall 2015 </a>
</li>
</ul>
</div>
</div>
</div>
<div class="row">
<div class="col-md-12 text-center">
<h2>
This is the
curriculum for the
2017 Echo 
<a href="https://www.learnacademy.org/ruby">Ruby Bootcamp</a>.
</h2>
</div>
</div>
</div>

<nav class="navbar navbar-inverse" id="days_navbar">
<p class="navbar-text">
BDD with Rails
</p>
<ul class="pull-right nav nav-pills" role="tablist">
<li class="active presentations_button" role="presentation">
<a aria-controls="concepts" role="tab" data-toggle="tab" href="https://www.learnacademy.org/current-days/743#concepts">Presentations</a>
</li>
<li class="exercises_button">
<a aria-controls="exercises" role="tab" data-toggle="tab" href="https://www.learnacademy.org/current-days/743#exercises">Challenges</a>
</li>
<li>
<a aria-controls="schedule" role="tab" data-toggle="tab" href="https://www.learnacademy.org/current-days/743#schedule">Daily Schedule</a>
</li>
</ul>
</nav>
<div class="tab-content outer day">
<div class="tab-pane active" id="concepts" role="tabpanel">
<div class="presentation-content">
<ul class="nav nav-tabs">
<li class="">
<a data-toggle="tab" href="https://www.learnacademy.org/current-days/743#presentation_1728" aria-expanded="false">Using RSpec and Capybara with Chrome</a>
</li>
<li class="active">
<a data-toggle="tab" href="https://www.learnacademy.org/current-days/743#presentation_1727" aria-expanded="true">BDD with Rails</a>
</li>
<li class="">
<a data-toggle="tab" href="https://www.learnacademy.org/current-days/743#presentation_1729" aria-expanded="false">Bundling and Installing Gems</a>
</li>
</ul>
<div class="tab-content inner">
<div class="tab-pane" id="presentation_1728">
<p>
</p><div class="markdown-body">
<h1>Using Rspec and Capybara with Chrome</h1>

<p>Javascript testing with Capybara allows us to add a <code>js: true</code> flag to individual specs, which will by default open Firefox browser window and manually go through the steps of any spec while it runs. For example:</p>

<pre lang="ruby"><code>RSpec.feature "SimulateCars", type: :feature, js: true do
  ...
</code></pre>

<p>Currently, if the version of Firefox on your machine is v48 or newer, <code>js: true</code> mode is no longer a seamless experience due to some incompatibilities with the driver, Selenium. Rather than trying to patch the multiple bugs, we're going to set up Capybara to use Chrome as its default browser.</p>

<p>For our Rails app, our <code>Gemfile</code> will look like this:</p>

<pre lang="ruby"><code>gem 'rspec-rails'
gem 'chromedriver-helper'

group :test do
  gem 'capybara'
  gem 'rspec-example_steps'
  gem 'launchy'
  gem 'selenium-webdriver'
end
</code></pre>

<p>After we <code>bundle</code> in the terminal, we type in <code>rails g rspec:install</code></p>

<p>This generates a few files, one of which is the <code>rails_helper.rb</code> file. We're going to make a few additions:</p>

<p><em>spec/rails_helper</em></p>

<pre lang="ruby"><code>ENV["RAILS_ENV"] = "test"
require File.expand_path('../dummy_app/config/environment', __FILE__)

require 'spec_helper'
require 'rspec/rails'

require 'capybara/rails'      # add this line
require 'rspec/example_steps' # add this line

# Add the lines below to tell Selenium to point to Chrome as its default browser in js: true mode
Capybara.register_driver :selenium do |app|
  Capybara::Selenium::Driver.new(app, browser: :chrome)
end
</code></pre>

<p>And that's it, you've set up Capybara to use Chrome as its browser when you attach a <code>js: true</code> flag to your tests.</p>

</div>
<p></p>
</div>
<div class="tab-pane active" id="presentation_1727">
<div class="video_frame">
<iframe allowfullscreen="" frameborder="0" height="600" mozallowfullscreen="" src="./RailsRSpecGuide_files/169293212.html" webkitallowfullscreen="" width="900"></iframe>
<p>
BDD with Rails from 
<a href="https://vimeo.com/user35425389">LEARN</a>
 on 
<a href="https://player.vimeo.com/video/169293212">Vimeo</a>
</p>
</div>
<p>
</p><div class="markdown-body">
<h1>BDD in a Rails Application</h1>

<h2>Setting up to Test</h2>

<p>In terminal, we create a new rails app:</p>

<p><code>rails new carsimulator -T</code></p>

<p>we use <code>-T</code> (capital T) so as to not generate the built-in Rails test unit, we will use rspec.</p>

<p><code>cd</code> into your new rails app and open in atom using <code>atom .</code></p>

<p>Inside the <code>gemfile</code>, make the following changes:</p>

<p>Inside the <code>group :development, :test</code> section of this file, add:</p>

<pre lang="ruby"><code>gem 'rspec-rails'
</code></pre>

<p>Then below that group, add a new group:</p>

<pre lang="ruby"><code>group :test do
  gem 'capybara'
  gem 'rspec-example_steps'
  gem 'launchy'
  gem 'selenium-webdriver'
end
</code></pre>

<p>Run <code>bundle</code> in the terminal, and then start the rails server.<br>
Make sure that the app is running in <code>localhost:3000</code>. There should be the familiar "Welcome Aboard" landing page for a Rails app</p>

<p>The first thing we have to do after setting up the Rails app is to run the generator to generate some rspec files. In the terminal run:</p>

<pre><code>rails g rspec:install
</code></pre>

<p>This creates a spec directory with two spec helper files and a <code>.rspec</code> file.</p>

<p>Open the <code>rails_helper.rb</code> file to include some dependencies:</p>

<pre lang="ruby"><code>ENV["RAILS_ENV"] = "test"
require File.expand_path('../dummy_app/config/environment', __FILE__)

require 'spec_helper'
require 'rspec/rails'

require 'capybara/rails'      # add this line
require 'rspec/example_steps' # add this line
</code></pre>

<p>To check that the testing is set up correctly, run <code>rake</code> in the terminal.</p>

<h2>Writing Tests</h2>

<p>This is all the set up to be able to start testing in our rails app, so now let's attempt the first story in our Car Challenge.</p>

<h3>Story 1: A Welcoming Landing Page</h3>

<p><em>Story : Given that I am on the car simulator landing page, then I can see a welcome message.</em></p>

<p>In the terminal:</p>

<pre><code>rails generate rspec:feature LandingPage
</code></pre>

<p>This creates a file called: <code>spec/features/landing_pages_spec.rb</code></p>

<p>Run <code>rake</code> to see that the feature test is being picked up by the testing system; the test should be "Not implemented yet".</p>

<p>In atom, take a look inside the spec file. Let's transcribe the user story into code:</p>

<p>landing_pages_spec.rb</p>

<pre lang="ruby"><code>require 'rails_helper'

RSpec.feature 'LandingPages', type: :feature do

  context 'Going to website' do
    Steps 'Being welcomed' do
      Given 'I am on the landing page' do
        pending
      end
      Then 'I can see a welcome message' do
        pending
      end
    end
  end

end
</code></pre>

<p>This is exactly what we are being asked to test. However, we have not actually testing anything yet. Change your <code>.rspec</code> file to contain the line:</p>

<pre><code>--format documentation
</code></pre>

<p>and run <code>rake</code>, then it will tell you a story about what we will be testing:</p>

<pre><code>LandingPages
  Going to website
    Being welcomed
      Given I am on the landing page
      Then I can see a welcome message
</code></pre>

<p>Rails should display a page to the user when the user goes to the website (meaning entering the base URL localhost:3000), and we want to see that that page has the message 'Welcome to the Car Simulator'.</p>

<pre lang="ruby"><code>RSpec.feature 'LandingPages', type: :feature do
  context 'Going to website' do
    Steps 'Being welcomed' do
      Given 'I am on the landing page' do
        visit '/'
      end
      Then 'I can see a welcome message' do
        expect(page).to have_content("Welcome to the Car Simulator")
      end
    end
  end

end
</code></pre>

<p>Let's see what happens. In terminal, run <code>rake</code> again.  </p>

<p>This should and does fail:</p>

<pre><code>LandingPages
  Going to website
    Being welcomed
      Given I am on the landing page (FAILED)
    Being welcomed (FAILED - 1)
</code></pre>

<p>because no route matches <code>[GET] "/"</code>.</p>

<p>Lets figure out how to make this pass.</p>

<p>All we have to do is to add a root path to a public webpage.<br>
In terminal:</p>

<pre><code>rails generate controller Cars index
</code></pre>

<p>Note: Cars (Capital letter and pluralized)</p>

<p>This creates a controller, a route, some views, as well as a controller spec (for unit level testing), a view spec (detailed testing for the view) and bunch of other stuff.<br>
Unfortunately it also creates some other files which we do not need at the moment; remove them with:</p>

<pre><code>rm -r spec/controllers spec/helpers spec/views
</code></pre>

<p>If we check in <code>routes.rb</code> we have a route that should help make our test pass.</p>

<p>routes.rb</p>

<pre lang="ruby"><code>Rails.application.routes.draw do
  root 'cars#index'   # add this line
  ...
</code></pre>

<p>Let's run the test again:</p>

<pre><code>LandingPages
  Going to website
    Being welcomed
      Given I am on the landing page
      Then I can see a welcome message (FAILED)
    Being welcomed (FAILED - 1)

</code></pre>

<p>Notice that "Given I am on the landing page" now succeeds, and the failure now happens on the next line "Then I can see a welcome message" because the page does yet contain a welcoming message.</p>

<p>Let's see what the user would actually be seeing.</p>

<pre lang="ruby"><code>    RSpec.feature 'LandingPages', type: :feature do
      context 'Going to website' do
        Steps 'Being welcomed' do
          Given 'I am on the landing page' do
            visit '/'
          end
          Then 'I can see a welcome message' do
            save_and_open_page   # add this line
            expect(page).to have_content("Welcome to the Car Simulator")
          end
        end
      end

    end
</code></pre>

<p>At the end of the failing spec, your browser should open with a view of the html:</p>

<pre><code>Cars#index

Find me in app/views/cars/index.html.erb
</code></pre>

<p>Note: helper methods like "save_and_open_page" only take raw html, so if you use this on a page that contains CSS styling, it might look a little different.  Don't worry, nothing's broken -- and you can check that by going to the web page yourself in your browser.</p>

<p>So in order to get our spec to pass, we want to change the page that contains the welcoming message:</p>

<p>app/views/cars/index.html.erb</p>

<pre lang="html"><code>    &lt;h1&gt;Welcome to the Car Simulator!&lt;/h1&gt;
</code></pre>

<p>Run the tests again and:</p>

<pre><code>LandingPages
  Going to website
    Being welcomed
      Given I am on the landing page
      Then I can see a welcome message

1 examples, 0 failures
</code></pre>

<p><em>SUCCESS!</em></p>

<p>We have now completed our first user story.<br>
Note that the workflow is:</p>

<ol>
<li>Get a user story.</li>
<li>Write the spec(ification), meaning the test(s) for the story.</li>
<li>Run the test(s) and see that they fail.</li>
<li>Implement one element of the story.</li>
<li>Run the test(s) again, and see that one element of the test(s) now succeed.</li>
<li>Rinse and repeat until all tests succeed.</li>
</ol>

<p>Flushed with this success, let's create another feature.</p>

<h3>Story 2: Fill out a Form</h3>

<p><em>Story: Given that I am on the landing page, I can create a car based on make and model year to be simulated.</em></p>

<p>Let's start with creating a new feature that eventually will contain all the elements of simulating a car.<br>
In the terminal:</p>

<pre><code>rails g rspec:feature SimulateCar
</code></pre>

<p>spec/features/simulate_cars_spec.rb</p>

<pre lang="ruby"><code>require 'rails_helper'

RSpec.feature "SimulateCars", type: :feature do
  context 'Creating a car for simulating' do
    Steps 'Creating a car' do
      Given 'I am on the landing page' do
        visit '/'
      end
      When 'I fill in the car make and model year' do
          fill_in 'make', with: 'DeLorean'
          fill_in 'model_year', with: '1985'
      end
    end
  end
end
</code></pre>

<p>Run the test, the "Then" will fail as expected, since we do not yet have an inputs.<br>
To make it pass:</p>

<p>app/views/cars/index.html.erb</p>

<pre lang="html"><code>&lt;label for="make"&gt;Make: &lt;/label&gt;
&lt;input type="text" name="make" id ="make"/&gt;
&lt;label for "model_year"&gt;Year: &lt;/label&gt;
&lt;input type="text" name="model_year" id="model_year"/&gt;
</code></pre>

<p>But as we write this code, it may occur that nowhere in our test does it say anything about all of this being in a form and that we probably need a button to save the data. We can change that by updating our test to reflect this:</p>

<pre lang="ruby"><code>RSpec.feature "SimulateCars", type: :feature do
  context 'Creating a car for simulating' do
    Steps 'Creating a car' do
      Given 'I am on the landing page' do
        visit '/'
      end
      Then 'I fill in the car make and model year' do
        fill_in 'make', with: 'DeLorean'
        fill_in 'model_year', with: '1985'
      end
      And 'I can submit the information' do
        click_button 'Create new car'
      end
    end
  end
end
</code></pre>

<p>And let's create the form to submit the information:</p>

<pre lang="html"><code>&lt;form id= "new_car" action="/cars/create"&gt;
  &lt;label for="make"&gt;Make: &lt;/label&gt;
  &lt;input type="text" name="make" id ="make"/&gt;
  &lt;label for "model_year"&gt;Year: &lt;/label&gt;
  &lt;input type="text" name="model_year" id="model_year"/&gt;
  &lt;input type="submit" value= "Create new car"/&gt;
&lt;/form&gt;
</code></pre>

<p>Running the tests will again fail indicating that we are missing a route. We can fix that:</p>

<pre lang="ruby"><code>  get 'cars/create' =&gt; 'cars#index'
</code></pre>

<p>While we do not want to show the index page after entering the car information, it does demonstrate that we can successfully submit information. Tests really can be this simple; breaking functionality down into its most essential parts, designing for them, and moving on to the next piece of functionality should be your main goal.</p>

<p>Let's do one more story.</p>

<h3>Story 3: Creating a Car</h3>

<p><em>Story: Given that I am on the Car Simulator landing page, I can create a car, and then I can see the information I entered about the car, along with the speed of the simulated car, which starts at 0 Km/h.</em></p>

<p>Let's augment our tests to reflect the story:</p>

<pre lang="ruby"><code>RSpec.feature "SimulateCars", type: :feature do
  context 'Creating a car for simulating' do
    Steps 'Creating a car' do
      Given 'I am on the landing page' do
        visit '/'
      end
      When 'I fill in the car make and model year' do
        fill_in 'make', with: 'DeLorean'
        fill_in 'model_year', with: '1985'
      end
      And 'I submit the information' do
        click_button 'Create new car'
      end
      Then "I can see the car's info" do
        expect(page).to have_content('Make: DeLorean')
        expect(page).to have_content('Year: 1985')
      end
      And 'I can see the speed of the car' do
        expect(page).to have_content('Speed: 0Km/h')
      end
    end
  end
end
</code></pre>

<p>The hint in the story says to create a new method in our Cars controller.  Let's use the verb 'create'.  We'll want to change the line that was sending cars/create to cars#index in our routes.rb file to something like this:</p>

<pre lang="ruby"><code>get 'cars/create' =&gt; 'cars#create'
</code></pre>

<p>Now, for the view.  This file should be <code>views/cars/create.html.erb</code>:</p>

<pre lang="html"><code>Hi
</code></pre>

<p>Then run the tests again. It should fail because we have not implementing doing anything with the information entered by the user; our expected content is not displayed on the page:</p>

<pre><code>SimulateCars
  Creating a car for simulating
    Creating a car
      Given I am on the landing page
      When I can fill in the car make and model year
      And I can submit the information
      Then I can see the car's info (FAILED)
    Creating a car (FAILED - 1)

Failures:

  1) SimulateCars Creating a car for simulating Creating a car
     Failure/Error: expect(page).to have_content('DeLorean')
       expected to find text "DeLorean" in "Hi"
</code></pre>

<p>Let's create the controller method and extract the car parameters:</p>

<pre lang="ruby"><code>class CarsController &lt; ApplicationController
  ...

  def create
    make = params[:make]
    model_year = params[:model_year]
  end
end
</code></pre>

<p>Running the tests confirms that we have not broken anything.</p>

<p>The class representing the car can look like this, which lives in app/models/car.rb:</p>

<pre lang="ruby"><code>class Car

  def initialize(make, model_year)
    @make = make
    @model_year = model_year
    @speed = 0
  end

  def make
    @make
  end

  def model_year
    @model_year
  end

  def speed
    @speed
  end

end
</code></pre>

<p>Which we can now use directly in the <code>create</code> method:</p>

<pre lang="ruby"><code>  def create
    make = params[:make]
    model_year = params[:model_year]
    @car = Car.new(make, model_year)
  end
</code></pre>

<p>And with that we can display the new car in the view:</p>

<pre lang="html"><code>Make: &lt;%= @car.make %&gt;
&lt;br/&gt;
Year: &lt;%= @car.model_year %&gt;
&lt;br/&gt;
Speed: &lt;%= @car.speed %&gt;Km/h
</code></pre>

<p>Run rake.  You should get all passing specs:</p>

<pre><code>LandingPages
  Going to website
    Being welcomed
      Given I am on the landing page
      Then I can see a welcome message

SimulateCars
  Creating a car for simulating
    Creating a car
      Given I am on the landing page
      Then I can fill in the car make and model year
      And I can submit the information
      Then I can see the car's info
      And I can see the speed of the car

2 examples, 0 failures
</code></pre>

<p>Another story completed!</p>

<h3>Story 4: Speeding Up</h3>

<p><em>Story: Given that I have created a car, when I click a button, then I make it speed up in 10Km/h increments.</em></p>

<p>Let's augment our tests to reflect the story:</p>

<pre lang="ruby"><code>RSpec.feature "SimulateCars", type: :feature do

  ...
  # Add this
  context 'Simulating a car' do
    Steps 'Speeding up a car' do
      Given 'I have created a car' do
        visit '/'
        fill_in 'make', with: 'DeLorean'
        fill_in 'model_year', with: '1985'
        click_button 'Create new car'
      end
      Then "the car's speed is 0Km/h" do
        expect(page).to have_content('Speed: 0Km/h')
      end
      When "I can click the accelerate button" do
        click_button 'Accelerate'
      end
      Then 'the speed of the car should be 10Km/h higher' do
        expect(page).to have_content('Speed: 10Km/h')
      end
    end
  end

end
</code></pre>

<p>Then just follow the process.</p>

<h1>Resouces</h1>

<p><a href="https://gist.github.com/tomas-stefano/6652111" target="_blank">Capybara Cheat Sheet</a></p>

<p><a href="https://github.com/jnicklas/capybara" target="_blank">Capybara Homepage</a></p>

<p><a href="https://github.com/railsware/rspec-example_steps" target="_blank">Given/When/Then/And/But steps for RSpec examples</a></p>

<p><a href="http://www.railscook.com/recipes/how-to-test-rails-with-rspec-and-capybara/" target="_blank">Avoid view and controller tests</a></p>

<p><a href="https://timsjpark.wordpress.com/2015/10/29/how-to-get-rid-of-a-huge-stack-trace-from-rspec-rails/" target="_blank">How to get rid of a HUGE stack trace from rspec-rails</a></p>

</div>
<p></p>
</div>
<div class="tab-pane" id="presentation_1729">
<p>
</p><div class="markdown-body">
<p>One of the features that has made Rails so popular to work with is its robust library of open-source software, also known as "gems". Installing gems is relatively straightforward.</p>

<p>If you want to install a gem onto your local system so that your entire computer has access to the software it contains, use the command <code>gem install name_of_gem</code>. </p>

<p>If you want to install a gem into a Rails project, you can include the gem name in the <code>Gemfile</code> and then use the command <code>bundle install</code>. This will install the gem in your project's directory, as well as any dependencies it needs. You may also use the command <code>bundle</code> for project-based installation; they both do the same thing.</p>

<p>If you would like to update the versions of the gems in your Rails project, you can use the command <code>bundle update</code>. Let's take a look at a <code>Gemfile</code>. Inside of it you probably see some gems that look like this:</p>

<pre><code>gem 'gmaps4rails'
</code></pre>

<p>This gem doesn't have a required version. After running <code>bundle update</code>, your Rails project will automatically have whatever the most recent version of <code>gmaps4rails</code> happens to be.</p>

<p>Unlike this one:</p>

<pre><code>gem 'rspec-rails', '~&gt; 3.5'
</code></pre>

<p>This gem, with a version specification, will automatically upgrade <em>up to</em> version 3.5. For example, if version 3.5.2 is available, running <code>bundle update</code> will upgrade this <code>respec-rails</code>. If version 3.6.1 is available, running <code>bundle update</code> will leave <code>rspec-rails</code> as it is.</p>

<p>After running a <code>bundle</code> command, we should always restart the server to make sure the installation or updating process is complete. Occassionally, forgetting to restart the server can result in errors or bugs because the application doesn't recognize the newly-installed software, so restarting the server lets us make sure that everything is in sync.</p>

</div>
<p></p>
</div>
</div>
</div>

</div>
<div class="tab-pane" id="exercises" role="tabpanel">
<div class="exercises-content">
<ul class="nav nav-tabs">
<li class="active">
<a data-toggle="tab" href="https://www.learnacademy.org/current-days/743#challenge_676">BDD Car Challenge</a>
</li>
</ul>
<div class="tab-content inner">
<div class="active in tab-pane" id="challenge_676">
<div class="markdown-body">
<div class="h2">
BDD Car Challenge
</div>
<div class="p">
<p>In order complete these challenges, you will need to complete the gem installation directions on the BDD with Rails tab. </p>

<p>Once you have completed that step and can load localhost, write a successfully passing test for each story from yesterday's challenges (<a href="https://www.learnacademy.org/days/269" target="_blank">Rails Car Challenge</a>)</p>

</div>
</div>
</div>
</div>
</div>

</div>
<div class="tab-pane" id="schedule" role="tabpanel">
<p><strong>Today's Tentative Schedule</strong></p><p>9:15am - Stand Up</p><p>9:30am - BDD with Rails<br></p><p>11:00am - Challenge: Car Accelerator with testing</p><p>12:00 noon - Lunch</p><p>1:00pm - continue with Car Accelerator Challenge with testing</p><p>4.30pm - Review</p><p>5:00pm - Class Ends</p>
</div>
</div>
<br>
<br>
<div class="nav navbar navbar-default navbar-fixed-bottom">
<div class="container">
<div class="navbar-inner">
<ul>
<!-- li -->
<!-- = link_to "Previous Day", day_path(@previous_day) if @previous_day -->
<!-- li -->
<!-- = link_to "Next Day", day_path(@next_day) if @next_day -->
<div class="navbar-right">
<li>
<a href="https://www.learnacademy.org/curriculum">Table of Contents</a>
</li>
</div>
</ul>
</div>
</div>
</div>

</div>


<script type="text/javascript" id="gtm-youtube-tracking">(function(g,e,l){function m(h){var c;for(c=0;c<h.length;c++){var a;a=h[c].src||"";a=-1<a.indexOf("youtube.com/embed/")||-1<a.indexOf("youtube.com/v/")?!0:!1;if(a){a=h[c];var b=g.createElement("a");b.href=a.src;b.hostname="www.youtube.com";b.protocol=g.location.protocol;var d="/"===b.pathname.charAt(0)?b.pathname:"/"+b.pathname,f=e.location.protocol+"%2F%2F"+e.location.hostname+(e.location.port?":"+e.location.port:"");-1===b.search.indexOf("enablejsapi")&&(b.search=(0<b.search.length?b.search+"\x26":
"")+"enablejsapi\x3d1");-1===b.search.indexOf("origin")&&-1===e.location.hostname.indexOf("localhost")&&(b.search=b.search+"\x26origin\x3d"+f);"application/x-shockwave-flash"===a.type&&(f=g.createElement("iframe"),f.height=a.height,f.width=a.width,d=d.replace("/v/","/embed/"),a.parentNode.parentNode.replaceChild(f,a.parentNode),a=f);b.pathname=d;a.src!==b.href+b.hash&&(a.src=b.href+b.hash);r(a)}}}function r(h){h.pauseFlag=!1;new YT.Player(h,{events:{onStateChange:function(c){t(c,h)}}})}function u(h){var c=
{};d.events["Watch to End"]&&(c["Watch to End"]=99*h/100);if(d.percentageTracking){var a=[],b;d.percentageTracking.each&&(a=a.concat(d.percentageTracking.each));if(d.percentageTracking.every){var e=parseInt(d.percentageTracking.every,10),f=100/e;for(b=1;b<f;b++)a.push(b*e)}for(b=0;b<a.length;b++)f=a[b],e=f+"%",f=h*f/100,c[e]=Math.floor(f)}return c}function t(e,c){var a=e.data,b=e.target,d=b.getVideoUrl(),d=d.match(/[?&]v=([^&#]*)/)[1],f=b.getPlayerState(),g=b.getDuration(),k=u(g),g={1:"Play",2:"Pause"},
g=g[a];c.playTracker=c.playTracker||{};1!==f||c.timer?(clearInterval(c.timer),c.timer=!1):(clearInterval(c.timer),c.timer=setInterval(function(){var a=b,e=k,d=c.videoId;a.getDuration();var h=a.getCurrentTime();a.getPlaybackRate();a[d]=a[d]||{};for(var f in e)e[f]<=h&&!a[d][f]&&(a[d][f]=!0,n(d,f))},1E3));1===a&&(c.playTracker[d]=!0,c.videoId=d,c.pauseFlag=!1);if(!c.playTracker[c.videoId])return!1;if(2===a){if(c.pauseFlag)return!1;c.pauseFlag=!0}p[g]&&n(c.videoId,g)}function n(h,c){var a="https://www.youtube.com/watch?v\x3d"+
h,b=e.GoogleAnalyticsObject;if("undefined"===typeof e[q]||d.forceSyntax)if("function"===typeof e[b]&&"function"===typeof e[b].getAll&&2!==d.forceSyntax)e[b]("send","event","Videos",c,a);else"undefined"!==typeof e._gaq&&1!==v&&e._gaq.push(["_trackEvent","Videos",c,a]);else e[q].push({event:"youTubeTrack",attributes:{videoUrl:a,videoAction:c}})}e.onYouTubeIframeAPIReady=function(){var d=e.onYouTubeIframeAPIReady;return function(){d&&d.apply(this,arguments);if(!navigator.userAgent.match(/MSIE [67]\./gi)){var c=
g.getElementsByTagName("iframe"),a=g.getElementsByTagName("embed");m(c);m(a)}}}();var d=l||{},v=d.forceSyntax||0,q=d.dataLayerName||"dataLayer",p={Play:!0,Pause:!0,"Watch to End":!0},k;for(k in d.events)d.events.hasOwnProperty(k)&&(p[k]=d.events[k]);l=g.createElement("script");l.src="//www.youtube.com/iframe_api";k=g.getElementsByTagName("script")[0];k.parentNode.insertBefore(l,k)})(document,window,{events:{Play:!0,Pause:!0,"Watch to End":!0},percentageTracking:{every:25,each:[10,90]}});</script><script type="text/javascript" id="" src="./RailsRSpecGuide_files/t.js"></script><script type="text/javascript" id="gtm-scroll-tracking">(function(h,l,a){function q(){if(!h.querySelector||!h.body.getBoundingClientRect)return!1;a.dataLayerName=a.dataLayerName||"dataLayer";a.distances=a.distances||{};u();r(l,"scroll",y(u,500))}function v(k,a,f,b,d){var e;for(e=0;e<a.length;e++){var c=parseInt(a[e],10),g="%"!==f?c+d:c/100*b+d,c=c+f;g<=b+d&&(k[c]=g)}return k}function w(a,g){var k=parseInt(a,10),b=g/k,d=[],e;for(e=1;e<b+1;e++)d.push(e*k);return d}function u(){var k=x(a.bottom),g=x(a.top);var f=h.body;var b=h.documentElement;f=Math.max(f.scrollHeight,
f.offsetHeight,b.clientHeight,b.scrollHeight,b.offsetHeight);g&&(f-=g);k&&(f=k-(g||0));f-=5;var b=g||0,d=z()||{},e=[],c=[],m;if(a.distances.percentages&&(a.distances.percentages.each&&(e=e.concat(a.distances.percentages.each)),a.distances.percentages.every))for(m=0;m<a.distances.percentages.every.length;m++)e=w(a.distances.percentages.every[m],100),e=c.concat(e);if(a.distances.pixels&&(a.distances.pixels.each&&(c=c.concat(a.distances.pixels.each)),a.distances.pixels.every))for(m=0;m<a.distances.pixels.every.length;m++){var A=
w(a.distances.pixels.every[m],f);c=c.concat(A)}d=v(d,e,"%",f,b);f=d=v(d,c,"px",f,b);var b=void 0!==l.pageXOffset,d="CSS1Compat"===(h.compatMode||""),b=b?l.pageYOffset:d?h.documentElement.scrollTop:h.body.scrollTop,b=parseInt(b,10),d=parseInt,c="CSS1Compat"===h.compatMode?h.documentElement:h.body,c=c.clientHeight,b=b+d(c,10),n;for(n in f)if(d=f[n],b>d&&!p[n]&&d<(k||Infinity)&&d>(g||0))if(p[n]=!0,d=n,c=l.GoogleAnalyticsObject,"undefined"===typeof l[a.dataLayerName]||a.forceSyntax)if("function"===typeof l[c]&&
"function"===typeof l[c].getAll&&2!==a.forceSyntax)l[c]("send","event",a.category,d,a.label,{nonInteraction:1});else"undefined"!==typeof l._gaq&&1!==a.forceSyntax&&l._gaq.push(["_trackEvent",a.category,d,a.label,0,!0]);else l[a.dataLayerName].push({event:"scrollTracking",attributes:{distance:d,label:a.label}})}function x(a){if("number"===typeof a||parseInt(a,10))return parseInt(a,10);try{var k=1===a.nodeType?a:h.querySelector(a);return t(k)}catch(f){}}function y(a,g){var k,b,d,e=null,c=0,h=function(){c=
new Date;e=null;d=a.apply(k,b)};return function(){var f=new Date;c||(c=f);var m=g-(f-c);k=this;b=arguments;0>=m?(clearTimeout(e),e=null,c=f,d=a.apply(k,b)):e||(e=setTimeout(h,m));return d}}function r(a,g,f){if(a.addEventListener)a.addEventListener(g,f);else if(a.attachEvent)a.attachEvent("on"+g,function(b){f.call(a,b)});else if("undefined"===typeof a["on"+g]||null===a["on"+g])a["on"+g]=function(b){f.call(a,b)}}function t(a){a=a.getBoundingClientRect().top;var k=void 0!==l.pageYOffset?l.pageYOffset:
(h.documentElement||h.body.parentNode||h.body).scrollTop;return a+k}var p={};!a.distances.percentages||!a.distances.percentages.every||a.distances.percentages.every instanceof Array||(a.distances.percentages.every=[a.distances.percentages.every]);!a.distances.pixels||!a.distances.pixels.every||a.distances.pixels.every instanceof Array||(a.distances.pixels.every=[a.distances.pixels.every]);var z=function(a){function g(){var d,e,c;f={};if(a.each)for(c=0;c<a.each.length;c++){var b=a.each[c];p[b]||(d=
h.querySelector(b))&&(f[b]=t(d))}if(a.every)for(c=0;c<a.every.length;c++){b=a.every[c];var g=h.querySelectorAll(b);if(g.length&&!p[b+":"+(g.length-1)])for(e=0;e<g.length;e++){var k=b+":"+e;p[k]||(d=g[e],f[k]=t(d))}}}if(a){var f={},b=0;g();return function(){var a={},e;b++;10<b&&(g(),b=0);for(e in f)a[e]=f[e];return a}}}(a.distances.elements);"loading"!==h.readyState?q():h.addEventListener?r(h,"DOMContentLoaded",q):r(l,"load",q)})(document,window,{forceSyntax:!1,dataLayerName:!1,distances:{percentages:{each:[10,
90],every:[25]},pixels:{each:[],every:[]},elements:{each:[],every:[]}},top:null,bottom:null,category:"Scroll Tracking",label:document.location.pathname});</script></body></html>